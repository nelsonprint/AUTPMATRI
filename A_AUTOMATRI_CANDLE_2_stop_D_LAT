// ==========================================
// GERANTSL_RompimentoDinamico v3.2 SafeMode++ (Candle Edition)
// Estrat√©gia de rompimento com SR congelado
// - Anti-lateralidade din√¢mica (ATR %)
// - Gatilho √∫nico (1 entrada por rompimento)
// - Stop inicial fixo + Stop din√¢mico por retra√ß√£o (80/80) + prote√ß√£o (50)
// - N√£o reentra na mesma barra ap√≥s stop din√¢mico
// ==========================================

// ================== INPUTS ==================
Input
    PeriodoSR(20);
    ConfirmarFechamento(True);
    MostrarLinhas(True);
    StopPts(30);
    AlvoPts(90);
    RangeLateralPts(150); // backup fail-safe (n√£o usado diretamente)

    // ---- Controle de lateralidade din√¢mica (ATR%) ----
    ATRPeriodo(14);
    ATRTipo(2);
    FatorATR(2.8);           // multiplica o ATR para definir limiar de lateralidade
    LimiarATRMin(100);       // fail-safe m√≠nimo em pontos

    // ---- Gest√£o de risco ----
    StopInicialPts(100);     // Stop fixo inicial
    AtivarStopRetrair(True);
    PtsRetrair(80);
    PtsProtecao(50);

    // ---- Configura√ß√µes padr√£o GERANTSL ----
    ContaPadrao("PRACTICE");
    DelayExecucao(0.700);

// ================= VARI√ÅVEIS ================
Var
    Suporte, Resistencia : Float;
    SuporteFix, ResistenciaFix : Float;
    RompeuRes, RompeuSup : Boolean;
    SinalCompra, SinalVenda : Boolean;
    EmLateral : Boolean;
    LimSupLat, LimInfLat : Float;

    // ATR
    ATRval, RangeSR : Float;
    LimiarATR : Float;

    // Execu√ß√£o e gest√£o
    RompimentoAtivo : Boolean;
    ValorEntrada, StopInicialNivel : Float;
    StopRetrairNivel : Float;
    StopRetrairAtivo : Boolean;
    PicoLucro, FundoLucro : Float;
    Tick : Float;

    // Controle de reentrada
    BarraEntrada : Integer;
    BarraBloqueioEntrada : Integer;
    EstavaComprado, EstavaVendido : Boolean;

    // Visual
    CorCandle : Integer;

// ================== IN√çCIO ==================
Begin
    If CurrentBar = 0 Then
    Begin
        RompimentoAtivo := False;
        LimSupLat := 0; LimInfLat := 0;
        BarraEntrada := -1;
        BarraBloqueioEntrada := -2;
        PicoLucro := 0;
        FundoLucro := 9999999;
        StopRetrairAtivo := False;
    End;

    Tick := MinPriceIncrement;

    EstavaComprado := IsBought;
    EstavaVendido  := IsSold;

    // --- 1Ô∏è‚É£ Suporte e Resist√™ncia ---
    Suporte     := Lowest(Low,  PeriodoSR);
    Resistencia := Highest(High, PeriodoSR);
    SuporteFix     := Suporte[1];
    ResistenciaFix := Resistencia[1];

    // --- 2Ô∏è‚É£ Lateralidade Din√¢mica (ATR%) ---
    ATRval := AvgTrueRange(ATRPeriodo, ATRTipo);
    RangeSR := ResistenciaFix - SuporteFix;
    LimiarATR := Max(ATRval * FatorATR, LimiarATRMin);

    EmLateral := RangeSR <= LimiarATR;

    If EmLateral Then
    Begin
        LimSupLat := ResistenciaFix;
        LimInfLat := SuporteFix;
    End;

    // --- 3Ô∏è‚É£ Rompimentos ---
    If ConfirmarFechamento Then
    Begin
        RompeuRes := Close > ResistenciaFix;
        RompeuSup := Close < SuporteFix;
    End
    Else
    Begin
        RompeuRes := High > ResistenciaFix;
        RompeuSup := Low  < SuporteFix;
    End;

    SinalCompra := RompeuRes;
    SinalVenda  := RompeuSup;

    // --- 4Ô∏è‚É£ Bloqueios ---
    If EmLateral and (Close <= LimSupLat) and (Close >= LimInfLat) Then
    Begin
        SinalCompra := False;
        SinalVenda  := False;
    End;

    If RompimentoAtivo Then
    Begin
        SinalCompra := False;
        SinalVenda  := False;
        If (Close <= ResistenciaFix) and (Close >= SuporteFix) Then
            RompimentoAtivo := False;
    End;

    // --- 5Ô∏è‚É£ Colora√ß√£o ---
    If SinalCompra Then
        CorCandle := clLime
    Else If SinalVenda Then
        CorCandle := clRed
    Else
        CorCandle := clSilver;
    PaintBar(CorCandle);

    // =====================================================
    // 6Ô∏è‚É£ Stop Din√¢mico por Retra√ß√£o (80/80) + Prote√ß√£o 50
    // =====================================================
    If AtivarStopRetrair Then
    Begin
        // --- COMPRADO ---
        If IsBought Then
        Begin
            If High > PicoLucro Then PicoLucro := High;
            If ((PicoLucro - BuyPrice) >= PtsRetrair) and ((PicoLucro - Close) >= PtsRetrair) Then
            Begin
                StopRetrairNivel := Close - PtsProtecao;
                If StopRetrairNivel < (BuyPrice + Tick) Then
                    StopRetrairNivel := BuyPrice + Tick;
                StopRetrairNivel := Round(StopRetrairNivel / Tick) * Tick;
                SellToCoverStop(StopRetrairNivel, StopRetrairNivel + Tick);
                StopRetrairAtivo := True;
            End;
        End;

        // --- VENDIDO ---
        If IsSold Then
        Begin
            If Low < FundoLucro Then FundoLucro := Low;
            If ((SellPrice - FundoLucro) >= PtsRetrair) and ((Close - FundoLucro) >= PtsRetrair) Then
            Begin
                StopRetrairNivel := Close + PtsProtecao;
                If StopRetrairNivel > (SellPrice - Tick) Then
                    StopRetrairNivel := SellPrice - Tick;
                StopRetrairNivel := Round(StopRetrairNivel / Tick) * Tick;
                BuyToCoverStop(StopRetrairNivel, StopRetrairNivel - Tick);
                StopRetrairAtivo := True;
            End;
        End;
    End;

    // --- 7Ô∏è‚É£ Fechamento e bloqueio de reentrada ---
    If (not IsBought) and (not IsSold) and (EstavaComprado or EstavaVendido) Then
    Begin
        If StopRetrairAtivo Then
            BarraBloqueioEntrada := CurrentBar;

        PicoLucro := 0;
        FundoLucro := 9999999;
        StopRetrairAtivo := False;
    End;

    // =====================================================
    // 8Ô∏è‚É£ Entradas com verifica√ß√£o de bloqueio
    // =====================================================

    // --- COMPRA ---
    If SinalCompra and (not IsBought) and (not IsSold) and (CurrentBar > BarraBloqueioEntrada) Then
    Begin
        BuyAtMarket;
        RompimentoAtivo := True;
        BarraEntrada := CurrentBar;

        ValorEntrada := Close;
        StopInicialNivel := ValorEntrada - StopInicialPts;
        If StopInicialNivel > (ValorEntrada - Tick) Then
            StopInicialNivel := ValorEntrada - (5 * Tick);
        StopInicialNivel := Round(StopInicialNivel / Tick) * Tick;

        SellToCoverLimit(ValorEntrada + AlvoPts);
        SellToCoverStop(StopInicialNivel, StopInicialNivel + Tick);

        PicoLucro := 0;
        FundoLucro := 9999999;
        StopRetrairAtivo := False;
    End;

    If IsBought and (BuyPrice > 0) Then
    Begin
        ValorEntrada := BuyPrice;
        StopInicialNivel := ValorEntrada - StopInicialPts;
        StopInicialNivel := Round(StopInicialNivel / Tick) * Tick;
        SellToCoverStop(StopInicialNivel, StopInicialNivel + Tick);
    End;

    // --- VENDA ---
    If SinalVenda and (not IsBought) and (not IsSold) and (CurrentBar > BarraBloqueioEntrada) Then
    Begin
        SellShortAtMarket;
        RompimentoAtivo := True;
        BarraEntrada := CurrentBar;

        ValorEntrada := Close;
        StopInicialNivel := ValorEntrada + StopInicialPts;
        If StopInicialNivel < (ValorEntrada + Tick) Then
            StopInicialNivel := ValorEntrada + (2 * Tick);
        StopInicialNivel := Round(StopInicialNivel / Tick) * Tick;

        BuyToCoverLimit(ValorEntrada - AlvoPts);
        BuyToCoverStop(StopInicialNivel, StopInicialNivel - Tick);

        PicoLucro := 0;
        FundoLucro := 9999999;
        StopRetrairAtivo := False;
    End;

    If IsSold and (SellPrice > 0) Then
    Begin
        ValorEntrada := SellPrice;
        StopInicialNivel := ValorEntrada + StopInicialPts;
        StopInicialNivel := Round(StopInicialNivel / Tick) * Tick;
        BuyToCoverStop(StopInicialNivel, StopInicialNivel - Tick);
    End;

    // --- 9Ô∏è‚É£ Linhas SR e Indicador Visual ---
    If MostrarLinhas Then
    Begin
        Plot(ResistenciaFix);
        Plot2(SuporteFix);
        SetPlotColor(1, clFuchsia);
        SetPlotColor(2, clAqua);
        SetPlotWidth(1, 1);
        SetPlotWidth(2, 1);
    End;

    // --- üîü Indicador visual de lateralidade ---
    If LastBarOnChart and EmLateral Then
        PlotText("‚ö† LATERAL ATR", clYellow, 1, 9, Close + (Range * 0.2));
End;
